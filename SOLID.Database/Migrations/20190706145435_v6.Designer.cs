// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SOLID.Database;

namespace SOLID.Database.Migrations
{
    [DbContext(typeof(DbContextSolid))]
    [Migration("20190706145435_v6")]
    partial class v6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SOLID.Models.Models.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountType");

                    b.Property<double>("Balance");

                    b.Property<int>("User_ID");

                    b.HasKey("ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Accounts");

                    b.HasDiscriminator<int>("AccountType");
                });

            modelBuilder.Entity("SOLID.Models.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Name");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("SOLID.Models.Models.CheckingAccount", b =>
                {
                    b.HasBaseType("SOLID.Models.Models.Account");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("SOLID.Models.Models.SavingsAccount", b =>
                {
                    b.HasBaseType("SOLID.Models.Models.Account");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("SOLID.Models.Models.Account", b =>
                {
                    b.HasOne("SOLID.Models.Models.User", "User")
                        .WithMany("Accounts")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
